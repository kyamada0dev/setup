##########################################################################
autoload -U promptinit; promptinit

local -A schars
autoload -Uz prompt_special_chars
prompt_special_chars

PROMPT="%n@%m:%~ %# "
PATH=$PATH:$HOME/.local/bin:$HOME/.cargo/bin
[ -d /home/linuxbrew/.linuxbrew ] && eval $(/home/linuxbrew/.linuxbrew/bin/brew shellenv)

##########################################################################
autoload -U compinit
compinit
compctl -g '*(/)' cd chdir pushd dirs

fpath=(/home/linuxbrew/.linuxbrew/share/zsh/site-functions(N-/) /usr/local/share/zsh/site-functions(N-/) /usr/share/zsh/vendor-completions(N-/) $fpath)

##########################################################################
if (( $+commands[mise] )); then
  # curl https://mise.run | sh
  eval "$(mise activate zsh)"
  eval "$(mise completion zsh)"
fi

##########################################################################
LANG=ja_JP.UTF-8; export LANG
LC_TIME=C; export LC_TIME
BLOCKSIZE=1024; export BLOCKSIZE
LS_BLOCK_SIZE=k; export LS_BLOCK_SIZE
JLESSCHARSET=japanese; export JLESSCHARSET
LESS="-rX"; export LESS

##########################################################################
setopt NO_HUP
setopt autoremoveslash
setopt autopushd
setopt prompt_subst
setopt pushd_ignore_dups
setopt autolist
setopt correctall
setopt auto_param_slash      # ディレクトリ名の補完で末尾の / を自動的に付加し、次の補完に備える
setopt mark_dirs             # ファイル名の展開でディレクトリにマッチした場合 末尾に / を付加
setopt list_types            # 補完候補一覧でファイルの種別を識別マーク表示 (訳注:ls -F の記号)
setopt auto_menu             # 補完キー連打で順に補完候補を自動で補完
setopt auto_param_keys       # カッコの対応などを自動的に補完
setopt magic_equal_subst     # コマンドラインの引数で --prefix=/usr などの = 以降でも補完できる
setopt complete_in_word      # 語の途中でもカーソル位置で補完
setopt always_last_prompt    # カーソル位置は保持したままファイル名一覧を順次その場で表示

##########################################################################
HISTFILE=$HOME/.zsh_history; export HISTFILE
HISTSIZE=1000; export HISTSIZE
SAVEHIST=1000; export SAVEHIST
setopt inc_append_history
setopt extended_history
setopt hist_ignore_all_dups
setopt hist_ignore_dups
setopt hist_save_no_dups
setopt sharehistory
setopt no_hist_beep

##########################################################################
cdpath=(. ~)

##########################################################################
setopt prompt_subst #プロンプト表示する度に変数を展開

gitinfo() {
  # Git 管理されているか確認
  git rev-parse --is-inside-work-tree >/dev/null 2>&1
  if [ $? -ne 0 ]; then
    export BRANCH_NAME=""
    export GIT_COLOR="%f"
    return
  fi

  # 現在の branch 名
  export BRANCH_NAME=$(git branch --show-current 2>/dev/null)

  # 差分の状態を確認
  if ! git diff --quiet 2>/dev/null; then
    # ワークツリーに未ステージ差分あり
    export GIT_COLOR="%B%F{208}"  # 黄: unstaged が一つでもある
  elif ! git diff --cached --quiet 2>/dev/null; then
    # staged のみ差分あり
    export GIT_COLOR="%F{yellow}"   # 緑: staged only
  else
    # 差分なし
    export GIT_COLOR="%F{green}"          # デフォルト色
  fi
}

precmd () {
  if [ -n "$(git status --short 2>/dev/null)" ];then
    export GIT_HAS_DIFF="✗"
    export GIT_NON_DIFF=""
  else
    export GIT_HAS_DIFF=""
    export GIT_NON_DIFF="✔"
  fi
  # git管理されているか確認
  git status --porcelain >/dev/null 2>&1
  if [ $? -ne 0 ];then
    export GIT_HAS_DIFF=""
    export GIT_NON_DIFF=""
  fi
  export BRANCH_NAME=$(git branch --show-current 2>/dev/null)
}
# 末尾に空白をつけることで改行される
PROMPT="
%F{cyan}%n@btob2-dev:%f %B%F{216}%~%f%b"
PROMPT=${PROMPT}'%F{green}  ${BRANCH_NAME} ${GIT_NON_DIFF}%F{red}${GIT_HAS_DIFF}
%f$ '

##########################################################################
FZF_KEY="/usr/share/doc/fzf/examples/key-bindings.zsh"
#FZF_KEY="$HOME/.fzf/shell/key-bindings.zsh"
[[ -e "${FZF_KEY}" ]] && source "${FZF_KEY}"

##########################################################################
if type vim >/dev/null 2>&1; then
  alias vi=vim
fi

alias cp='nocorrect cp -i'
if type ggrep >/dev/null 2>&1; then
  alias grep="ggrep --color"
else
  alias grep="grep --color"
fi
alias h='fc -l -i -45'
alias history='fc -l -45'
alias ls='ls -F'
alias mv='nocorrect mv -i'
alias rm='rm -i'
alias sudo='sudo -H'
alias tmux="tmux -2"

##########################################################################
if [[ -s $HOME/.zshrc.local ]]; then source $HOME/.zshrc.local; fi

HOSTNAME=$(hostname)
if [[ -s $HOME/dotfiles/dot.zshrc.$HOSTNAME ]]; then
  source $HOME/dotfiles/dot.zshrc.$HOSTNAME
fi

# vim: ft=sh foldmethod=marker
